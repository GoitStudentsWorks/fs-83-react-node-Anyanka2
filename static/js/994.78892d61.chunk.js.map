{"version":3,"file":"static/js/994.78892d61.chunk.js","mappings":"oJAAIA,E,UACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAASC,EAAMC,GACtB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDqB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAMnB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E4B,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,YAAa,IACbC,EAAG,qBAEP,CACA,MAAMC,EAA0B,aAAiBjB,GACjD,EAAe,IAA0B,yD,sCC3BrChB,E,UACJ,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAAS2B,EAAajB,EAAMC,GAC1B,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDqB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAMnB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E4B,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,YAAa,IACbC,EAAG,+MAEP,CACA,MAAMC,EAA0B,aAAiBC,GAClC,G,sCC3BXlC,EAAOmC,E,UACX,SAASlC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAAS6B,EAAWnB,EAAMC,GACxB,IAAI,MACFC,EAAK,QACLC,KACGC,GACDJ,EACJ,OAAoB,gBAAoB,MAAOhB,EAAS,CACtDqB,MAAO,6BACPC,MAAO,GACPC,OAAQ,GACRC,KAAM,OACNC,IAAKR,EACL,kBAAmBE,GAClBC,GAAQF,EAAqB,gBAAoB,QAAS,CAC3DQ,GAAIP,GACHD,GAAS,KAAMnB,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3E4B,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,YAAa,IACbC,EAAG,wEACAG,IAAWA,EAAsB,gBAAoB,OAAQ,CAChEP,OAAQ,UACRC,cAAe,QACfC,eAAgB,QAChBC,YAAa,IACbC,EAAG,yCAEP,CACA,MAAMC,EAA0B,aAAiBG,GAClC,G,sRC7BR,MAAMC,EAAiBC,EAAAA,GAAOC,KAAIC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gGAO5BC,EAAoBJ,EAAAA,GAAOK,GAAEC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6OAI/BxB,IAAA,IAAC,MAAE4B,GAAO5B,EAAA,OAAK4B,EAAMC,OAAOC,KAAK,IAW/BC,EAAgCV,EAAAA,GAAOW,IAAGC,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0KAKpCU,IAAA,IAAC,MAAEC,GAAOD,EAAA,OAAMC,EAAQ,MAAQ,MAAM,IAGpCC,IAAA,IAAC,MAAED,GAAOC,EAAA,OAAMD,EAAQ,OAAS,MAAM,IAI/CE,EAAqChB,EAAAA,GAAOW,IAAGM,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,mIAMtDe,IAAA,IAAC,MAAEX,EAAK,MAAEO,GAAOI,EAAA,OAAMJ,EAAQP,EAAMC,OAAOW,IAAMZ,EAAMC,OAAOY,QAAQ,IAIhEC,EAA6BrB,EAAAA,GAAOW,IAAGW,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,0KAKjCoB,IAAA,IAAC,MAAET,GAAOS,EAAA,OAAMT,EAAQ,MAAQ,MAAM,IAGpCU,IAAA,IAAC,MAAEV,GAAOU,EAAA,OAAMV,EAAQ,OAAS,MAAM,IAI/CW,EAAkCzB,EAAAA,GAAOW,IAAGe,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,mIAMnDwB,IAAA,IAAC,MAAEpB,EAAK,MAAEO,GAAOa,EAAA,OAAMb,EAAQP,EAAMC,OAAOW,IAAMZ,EAAMC,OAAOY,QAAQ,IAIhEQ,GAAoB5B,EAAAA,EAAAA,IAAO6B,EAAAA,GAAP7B,CAAa8B,IAAAA,GAAA3B,EAAAA,EAAAA,GAAA,oJAWjC4B,EAAY/B,EAAAA,GAAOgC,KAAIC,IAAAA,GAAA9B,EAAAA,EAAAA,GAAA,yKAStB+B,IAAA,IAAC,MAAE3B,GAAO2B,EAAA,OAAK3B,EAAMC,OAAOW,GAAG,IAIhCgB,EAAenC,EAAAA,GAAOW,IAAGyB,IAAAA,GAAAjC,EAAAA,EAAAA,GAAA,4MAG3BkC,IAAA,IAAC,MAAE9B,GAAO8B,EAAA,OAAK9B,EAAMC,OAAOW,GAAG,IAW7BmB,EAAgCtC,EAAAA,GAAOW,IAAG4B,IAAAA,GAAApC,EAAAA,EAAAA,GAAA,0KAKpCqC,IAAA,IAAC,MAAE1B,EAAK,OAAE2B,GAAQD,EAAA,OAAM1B,GAAS2B,EAAS,MAAQ,MAAM,IAGtDC,IAAA,IAAC,MAAE5B,EAAK,OAAE2B,GAAQC,EAAA,OAAM5B,GAAS2B,EAAS,OAAS,MAAM,IAIjEE,EAAqC3C,EAAAA,GAAOW,IAAGiC,IAAAA,GAAAzC,EAAAA,EAAAA,GAAA,mIAMtD0C,IAAA,IAAC,MAAEtC,EAAK,MAAEO,EAAK,OAAE2B,GAAQI,EAAA,OACzB/B,EACIP,EAAMC,OAAOW,IACbsB,EACAlC,EAAMC,OAAOsC,MACbvC,EAAMC,OAAOY,QAAQ,IAIlB2B,EAAe/C,EAAAA,GAAOgC,KAAIgB,IAAAA,GAAA7C,EAAAA,EAAAA,GAAA,kEAM1B8C,EAAUjD,EAAAA,GAAOgC,KAAIkB,IAAAA,GAAA/C,EAAAA,EAAAA,GAAA,yKASpBgD,IAAA,IAAC,MAAE5C,EAAK,MAAEO,EAAK,OAAE2B,GAAQU,EAAA,OACjCrC,EACIP,EAAMC,OAAOW,IACbsB,EACAlC,EAAMC,OAAOsC,MACbvC,EAAMC,OAAOY,QAAQ,IAIlBgC,EAAgBpD,EAAAA,GAAOgC,KAAIqB,IAAAA,GAAAlD,EAAAA,EAAAA,GAAA,yKAS1BmD,IAAA,IAAC,MAAE/C,GAAO+C,EAAA,OAAK/C,EAAMC,OAAOsC,KAAK,IAIlCS,EAAcvD,EAAAA,GAAOW,IAAG6C,IAAAA,GAAArD,EAAAA,EAAAA,GAAA,4MAG1BsD,IAAA,IAAC,MAAElD,GAAOkD,EAAA,OAAKlD,EAAMC,OAAOsC,KAAK,IAW/BY,EAAuB1D,EAAAA,GAAOW,IAAGgD,IAAAA,GAAAxD,EAAAA,EAAAA,GAAA,uDAEnCyD,IAAA,IAAC,MAAErD,GAAOqD,EAAA,OAAKrD,EAAMC,OAAOW,GAAG,IAG7B0C,EAAc7D,EAAAA,GAAO8D,OAAMC,IAAAA,GAAA5D,EAAAA,EAAAA,GAAA,6bAOxB6D,IAAA,IAAC,MAAEzD,GAAOyD,EAAA,OAAKzD,EAAMC,OAAOY,QAAQ,IAqBvC6C,EAAYjE,EAAAA,GAAOkE,EAACC,IAAAA,GAAAhE,EAAAA,EAAAA,GAAA,kHAKtBiE,IAAA,IAAC,MAAE7D,GAAO6D,EAAA,OAAK7D,EAAMC,OAAO6D,IAAI,IAG9BC,GAAYtE,EAAAA,EAAAA,IAAOuE,EAAAA,GAAPvE,CAAYwE,IAAAA,GAAArE,EAAAA,EAAAA,GAAA,qGAE1BsE,IAAA,IAAC,MAAElE,GAAOkE,EAAA,OAAKlE,EAAMC,OAAOY,QAAQ,G,iKClM/C,MAAMsD,EAAgB,CACpBC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGbC,EAAmBC,IACvB,MAAMC,EAAS,CAAC,EAkChB,OAhCKD,EAAOL,SAED,QAAQO,KAAKF,EAAOL,UAC7BM,EAAON,SAAW,2BACTK,EAAOL,SAASzG,OAAS,IAClC+G,EAAON,SAAW,+CAJlBM,EAAON,SAAW,yBAOfK,EAAOJ,MAEA,2CAA2CM,KAAKF,EAAOJ,SACjEK,EAAOL,MAAQ,uBAFfK,EAAOL,MAAQ,yBAKZI,EAAOH,SAEDG,EAAOH,SAAS3G,OAAS,EAClC+G,EAAOJ,SAAW,8CACR,WAAWK,KAAKF,EAAOH,UAEvB,KAAKK,KAAKF,EAAOH,YAC3BI,EAAOJ,SAAW,4CAFlBI,EAAOJ,SAAW,4CAJlBI,EAAOJ,SAAW,yBASfG,EAAOF,gBAEDE,EAAOF,gBAAgB5G,OAAS,EACzC+G,EAAOH,gBAAkB,8CAChBE,EAAOH,WAAaG,EAAOF,kBACpCG,EAAOH,gBAAkB,0BAJzBG,EAAOH,gBAAkB,yBAOpBG,CAAM,EAqUf,EAlUqBE,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,OACVC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAqBC,IAA0BF,EAAAA,EAAAA,WAAS,IACxDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCK,EAAgBC,IAAqBN,EAAAA,EAAAA,WAAS,GAE/CO,GAAWC,EAAAA,EAAAA,MAEXC,EAA2BA,KAC/BV,GAAiBW,IAAeA,GAAU,EAGtCC,EAAkCA,KACtCT,GAAwBQ,IAAeA,GAAU,EAiCnD,OACEE,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACL3B,cAAeA,EACf4B,SAAUvB,EACVwB,kBAAkB,EAClBC,SAlCiBC,MAAOzB,EAAMrG,KAAoC,IAAlC,cAAE+H,EAAa,UAAEC,GAAWhI,EAC9D,GAAIgH,EACF,OAGFC,GAAW,GACX,MAAMgB,EAAc,CAClBC,KAAM7B,EAAOL,SACbC,MAAOI,EAAOJ,MACdC,SAAUG,EAAOH,UAGnB,WACyBO,GAAS0B,EAAAA,EAAAA,IAASF,KAE5B9F,MACXgF,GAAkB,IAElBA,GAAkB,GAClBC,EAAS,UAEb,CAAE,MAAOjF,GACPiG,QAAQjG,MAAM,SAAUA,EAC1B,CAAC,QACC8E,GAAW,GACXc,GAAc,EAChB,GAQyBM,SAEtBnG,IAUM,IAVL,OACAmE,EAAM,OACNC,EAAM,UACNgC,EAAS,QACTC,EAAO,aACPC,EAAY,WACZC,EAAU,aACVC,EAAY,aACZC,EAAY,UACZX,GACD9F,EACMmE,EAAOH,SAEDG,EAAOH,SAAS3G,OAAS,EAClC+G,EAAOJ,SAAW,8CACR,WAAWK,KAAKF,EAAOH,UAEvB,KAAKK,KAAKF,EAAOH,YAC3BI,EAAOJ,SAAW,4CAFlBI,EAAOJ,SAAW,4CAJlBI,EAAOJ,SAAW,yBASpB,MAAM0C,EACJvC,EAAOH,UACPG,EAAOH,SAAS3G,QAAU,GAC1B,WAAWgH,KAAKF,EAAOH,WACvB,KAAKK,KAAKF,EAAOH,UACb2C,EACJxC,EAAOH,UAAYG,EAAOH,WAAaG,EAAOF,gBAC1C2C,EAAkBzC,EAAOL,UAAYK,EAAOL,SAASzG,QAAU,EAC/DwJ,EACJ1C,EAAOJ,QACN,2CAA2CM,KAAKF,EAAOJ,OACpD+C,EAAqBC,IACzB,MAAM,KAAEf,GAASe,EAAE7J,OACnBkJ,EAAU,IAAKhC,EAAQ,CAAC4B,GAAO,KAC/BM,EAAaS,EAAE,EAGjB,OACEC,EAAAA,EAAAA,MAAC9H,EAAAA,GAAc,CAACyG,SAAUa,EAAaL,SAAA,EACrCZ,EAAAA,EAAAA,KAAChG,EAAAA,GAAiB,CAAA4G,SAAC,kBACnBa,EAAAA,EAAAA,MAACnH,EAAAA,GAA6B,CAC5BI,MAAOmE,EAAON,UAAYuC,EAAQvC,SAClClC,OAAQgF,EAAgBT,SAAA,EAExBa,EAAAA,EAAAA,MAAC7G,EAAAA,GAAkC,CACjCF,MAAOmE,EAAON,UAAYuC,EAAQvC,SAClClC,OAAQgF,EACRK,MAAO,CACLC,YACE9C,EAAON,UAAYuC,EAAQvC,SAAW,UAAY,WACpDqC,SAAA,EAEFZ,EAAAA,EAAAA,KAACxE,EAAAA,GAAiB,CAChBoG,KAAK,SACLnB,KAAK,WACLoB,YAAY,WACZC,MAAOlD,EAAOL,SACdwD,SAAUR,EACVS,OAAQhB,EACRiB,SAAU1C,IAEX8B,IACCrB,EAAAA,EAAAA,KAAChD,EAAAA,GAAa,CAAA4D,UACZZ,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,MAGbrD,EAAON,UAAYuC,EAAQvC,UAAYK,EAAOL,WAC7CyB,EAAAA,EAAAA,KAACrE,EAAAA,GAAS,CACRwG,QAASA,KACP5B,EAAU,CAAE3B,OAAQ,IAAKA,EAAQL,SAAU,KAAO,EAClDqC,UAEFZ,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,SAIfvD,EAAON,UAAYuC,EAAQvC,WAC1ByB,EAAAA,EAAAA,KAACjE,EAAAA,GAAY,CAAC0E,KAAK,WAAUG,SAAE/B,EAAON,eAI1CkD,EAAAA,EAAAA,MAACxG,EAAAA,GAA0B,CACzBP,MAAOmE,EAAOL,OAASsC,EAAQtC,MAC/BnC,OAAQiF,EAAaV,SAAA,EAErBa,EAAAA,EAAAA,MAACpG,EAAAA,GAA+B,CAC9BX,MAAOmE,EAAOL,OAASsC,EAAQtC,MAC/BnC,OAAQiF,EACRI,MAAO,CACLC,YACE9C,EAAOL,OAASsC,EAAQtC,MAAQ,UAAY,WAC9CoC,SAAA,EAEFZ,EAAAA,EAAAA,KAACxE,EAAAA,GAAiB,CAChBoG,KAAK,SACLnB,KAAK,QACLoB,YAAY,QACZC,MAAOlD,EAAOJ,MACduD,SAAUR,EACVS,OAAQhB,EACRiB,SAAU1C,IAEXX,EAAOJ,OACN,2CAA2CM,KACzCF,EAAOJ,SAEPwB,EAAAA,EAAAA,KAAChD,EAAAA,GAAa,CAAA4D,UACZZ,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,MAGfrD,EAAOL,OAASsC,EAAQtC,OAASI,EAAOJ,QACvCwB,EAAAA,EAAAA,KAACrE,EAAAA,GAAS,CACRwG,QAASA,KACP5B,EAAU,CAAE3B,OAAQ,IAAKA,EAAQJ,MAAO,KAAO,EAC/CoC,UAEFZ,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,SAKfvD,EAAOL,OAASsC,EAAQtC,QACvBwB,EAAAA,EAAAA,KAACjE,EAAAA,GAAY,CAAC0E,KAAK,QAAOG,SAAE/B,EAAOL,YAIvCiD,EAAAA,EAAAA,MAACvF,EAAAA,GAA6B,CAC5BxB,MAAOmE,EAAOJ,UAAYqC,EAAQrC,SAClCpC,OAAQ8E,EAAgBP,SAAA,EAExBa,EAAAA,EAAAA,MAAClF,EAAAA,GAAkC,CACjC7B,MAAOmE,EAAOJ,UAAYqC,EAAQrC,SAClCpC,OAAQ8E,EACRO,MAAO,CACLC,YACE9C,EAAOJ,UAAYqC,EAAQrC,SACvB,UACA0C,EACA,UACA,WACNP,SAAA,EAEFZ,EAAAA,EAAAA,KAACxE,EAAAA,GAAiB,CAChBoG,KAAM1C,EAAe,OAAS,WAC9BuB,KAAK,WACLoB,YAAY,WACZC,MAAOlD,EAAOH,SACdsD,SAAUR,EACVS,OAAQhB,EACRiB,SAAU1C,KAEZkC,EAAAA,EAAAA,MAAC9E,EAAAA,GAAY,CAAAiE,SAAA,EACXZ,EAAAA,EAAAA,KAACnD,EAAAA,GAAO,CACNsF,QAAStC,EACTnF,MAAOmE,EAAOJ,UAAYqC,EAAQrC,SAClCpC,OAAQ8E,EAAgBP,SAEvB1B,GAAec,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,KAAMrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAY,MAEhDnB,IACCnB,EAAAA,EAAAA,KAAChD,EAAAA,GAAa,CAAA4D,UACZZ,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,MAGbrD,EAAOJ,UAAYqC,EAAQrC,UAAYG,EAAOH,WAC7CuB,EAAAA,EAAAA,KAACrE,EAAAA,GAAS,CACRwG,QAASA,KACP5B,EAAU,CAAE3B,OAAQ,IAAKA,EAAQH,SAAU,KAAO,EAClDmC,UAEFZ,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,YAMjBvD,EAAOJ,UAAYqC,EAAQrC,WAC1BuB,EAAAA,EAAAA,KAACjE,EAAAA,GAAY,CAAA6E,SAAE/B,EAAOJ,WAEvB0C,IACCnB,EAAAA,EAAAA,KAAC7C,EAAAA,GAAW,CAACoF,MAAOpB,EAAgBP,SAAC,2BAMzCa,EAAAA,EAAAA,MAACvF,EAAAA,GAA6B,CAC5BxB,MAAOmE,EAAOH,iBAAmBoC,EAAQpC,gBACzCrC,OAAQ+E,EAAgBR,SAAA,EAExBa,EAAAA,EAAAA,MAAClF,EAAAA,GAAkC,CACjC7B,MAAOmE,EAAOH,iBAAmBoC,EAAQpC,gBACzCgD,MAAO,CACLC,YACE9C,EAAOH,iBAAmBoC,EAAQpC,gBAC9B,UACA,WACNkC,SAAA,EAEFZ,EAAAA,EAAAA,KAACxE,EAAAA,GAAiB,CAChBoG,KAAMvC,EAAsB,OAAS,WACrCoB,KAAK,kBACLoB,YAAY,mBACZC,MAAOlD,EAAOF,gBACdqD,SAAUR,EACVS,OAAQhB,EACRiB,SAAU1C,KAEZkC,EAAAA,EAAAA,MAAC9E,EAAAA,GAAY,CAAAiE,SAAA,EACXZ,EAAAA,EAAAA,KAACnD,EAAAA,GAAO,CACNsF,QAASpC,EACTrF,MAAOmE,EAAOH,iBAAmBoC,EAAQpC,gBAAgBkC,SAExDvB,GAAsBW,EAAAA,EAAAA,KAACqC,EAAAA,EAAW,KAAMrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAY,MAEvDlB,IACCpB,EAAAA,EAAAA,KAAChD,EAAAA,GAAa,CAAA4D,UACZZ,EAAAA,EAAAA,KAACkC,EAAAA,EAAS,MAGbrD,EAAOH,iBACNoC,EAAQpC,iBACRE,EAAOF,kBACLsB,EAAAA,EAAAA,KAACrE,EAAAA,GAAS,CACRwG,QAASA,KACP5B,EAAU,CACR3B,OAAQ,IAAKA,EAAQF,gBAAiB,KACtC,EACFkC,UAEFZ,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,YAMnBvD,EAAOH,iBAAmBoC,EAAQpC,kBACjCsB,EAAAA,EAAAA,KAACjE,EAAAA,GAAY,CAAA6E,SAAE/B,EAAOH,kBAEvB0C,IACCpB,EAAAA,EAAAA,KAAC7C,EAAAA,GAAW,CAACoF,MAAOnB,EAAgBR,SAAC,wBAMvCnB,IACAO,EAAAA,EAAAA,KAAC1C,EAAAA,GAAoB,CAAAsD,SAAC,6EAMxBZ,EAAAA,EAAAA,KAACvC,EAAAA,GAAW,CAACmE,KAAK,SAASK,SAAUf,EAAaN,SAAC,kBAGnDa,EAAAA,EAAAA,MAAC5D,EAAAA,GAAS,CAAA+C,SAAA,CAAC,2BACgB,KACzBZ,EAAAA,EAAAA,KAAC9B,EAAAA,GAAS,CAACsE,GAAI,SAAS5B,SAAC,gBAEZ,GAGd,E,2BC5YN,MAAM6B,EAAsB7I,EAAAA,GAAOW,IAAGT,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2KAWhC2I,EAAsB9I,EAAAA,GAAOW,IAAGL,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8VCG7C,EAVqB4I,KAEjB3C,EAAAA,EAAAA,KAACyC,EAAmB,CAAA7B,UAClBZ,EAAAA,EAAAA,KAAC0C,EAAmB,CAAA9B,UAClBZ,EAAAA,EAAAA,KAACjB,EAAY,O","sources":["assets/icons/check.svg","assets/icons/eye-closed.svg","assets/icons/eye-open.svg","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#00C3AD\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M20 7 9 18l-5-5\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.fc857424c8cfa2f045aa49bf48c62fa8.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEyeClosed(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M9.76 5.3c.7-.2 1.45-.3 2.24-.3 6.36 0 10 7 10 7s-.83 1.6-2.39 3.26M4.35 8.78C2.82 10.43 2 12 2 12s3.64 7 10 7c.8 0 1.56-.11 2.27-.3m-2.77-3.74A3 3 0 0 1 9.17 13m3.33-3.96a3 3 0 0 1 2.46 2.46M3 3l18 18\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeClosed);\nexport default __webpack_public_path__ + \"static/media/eye-closed.851f14aa050ec0b04e41912f21ed8fc1.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgEyeOpen(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 24,\n    height: 24,\n    fill: \"none\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M2 12s3.64-7 10-7c6.36 0 10 7 10 7s-3.64 7-10 7c-6.36 0-10-7-10-7Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#54ADFF\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 1.5,\n    d: \"M12 15a3 3 0 1 0 0-6 3 3 0 0 0 0 6Z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgEyeOpen);\nexport default __webpack_public_path__ + \"static/media/eye-open.359943f3748625140677c321279e043e.svg\";\nexport { ForwardRef as ReactComponent };","import { Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const RegisterFormEl = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 24px;\n  line-height: 1.38;\n  color: ${({ theme }) => theme.colors.black};\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 36px;\n    line-height: 1.36;\n    \n  margin-bottom: 40px;\n  }\n`;\n\nexport const RegisterFormUsernameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '1px' : '14px')};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${({ error }) => (error ? '10px' : '32px')};\n  }\n`;\n\nexport const RegisterFormUsernameInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blueLink)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormEmailContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '1px' : '14px')};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${({ error }) => (error ? '10px' : '32px')};\n  }\n`;\n\nexport const RegisterFormEmailInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blueLink)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  padding: 12px 0;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  width: 100%;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n\nexport const ErrorIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 1px;\n  color: ${({ theme }) => theme.colors.red};\n\n  font-size: 10px;\n  font-weight: 400;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin-top: 4px;\n  }\n`;\n\nexport const RegisterFormPasswordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error, secure }) => (error || secure ? '1px' : '14px')};\n\n  @media screen and (min-width: 768px) {\n    margin-bottom: ${({ error, secure }) => (error || secure ? '10px' : '32px')};\n  }\n`;\n\nexport const RegisterFormPasswordInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blueLink};\n  border-radius: 40px;\n`;\n\nexport const PasswordIcon = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const EyeIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blueLink};\n  }\n`;\n\nexport const CheckMarkIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.green};\n  }\n`;\n\nexport const InfoMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 1px;\n  color: ${({ theme }) => theme.colors.green};\n\n  font-weight: 400;\n  font-size: 10px;\n\n  @media screen and (min-width: 768px) {\n    font-size: 16px;\n    margin-top: 4px;\n  }\n`;\n\nexport const RegisterErrorMessage = styled.div`\n  padding: 15px 16px 0 16px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const RegisterBtn = styled.button`\n  margin-top: 26px;\n  margin-bottom: 8px;\n  width: 100%;\n\n  padding: 10px 0 10px 0;\n\n  background: ${({ theme }) => theme.colors.blueLink};\n  border: none;\n  border-radius: 40px;\n\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n\n  letter-spacing: 0.04em;\n\n  color: #ffffff;\n\n  @media screen and (min-width: 768px) {\n    margin-top: 20px;\n    margin-bottom: 16px;\n  }\n  @media screen and (min-width: 1280px) {\n    margin-top: 8px;\n  }\n`;\n\nexport const LoginText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: 0.04em;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const LoginLink = styled(Link)`\n  text-decoration-line: underline;\n  color: ${({ theme }) => theme.colors.blueLink};\n  display: inline;\n  cursor: pointer;\n`;","import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { Formik } from \"formik\";\n\nimport { register } from \"../../redux/auth/operation\";\n\nimport { ReactComponent as OpenEyeIcon } from \"../../assets/icons/eye-open.svg\";\nimport { ReactComponent as CloseEyeIcon } from \"../../assets/icons/eye-closed.svg\";\nimport { ReactComponent as CrossIcon } from \"../../assets/icons/cross-small.svg\";\nimport { ReactComponent as CheckIcon } from \"../../assets/icons/check.svg\";\n\nimport {\n  RegisterFormEl,\n  RegisterFormTitle,\n  RegisterFormUsernameContainer,\n  RegisterFormUsernameInputContainer,\n  RegisterFormEmailContainer,\n  RegisterFormEmailInputContainer,\n  RegisterFormInput,\n  RegisterFormPasswordContainer,\n  RegisterFormPasswordInputContainer,\n  ErrorMessage,\n  PasswordIcon,\n  RegisterBtn,\n  EyeIcon,\n  ErrorIcon,\n  CheckMarkIcon,\n  InfoMessage,\n  RegisterErrorMessage,\n  LoginText,\n  LoginLink,\n} from \"./RegisterForm.styled\";\n\n\nconst initialValues = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\n\nconst fieldValidation = (values) => {\n  const errors = {};\n\n  if (!values.username) {\n    errors.username = \"This field is required\";\n  } else if (/^\\s+$/.test(values.username)) {\n    errors.username = \"Username cannot be empty\";\n  } else if (values.username.length < 2) {\n    errors.username = \"Username must be at least 2 characters long\";\n  }\n\n  if (!values.email) {\n    errors.email = \"This field is required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = \"Enter a valid Email\";\n  }\n\n  if (!values.password) {\n    errors.password = \"This field is required\";\n  } else if (values.password.length < 8) {\n    errors.password = \"Password must be at least 8 characters long\";\n  } else if (!/[A-Za-z]/.test(values.password)) {\n    errors.password = \"Password must contain at least one letter\";\n  } else if (!/\\d/.test(values.password)) {\n    errors.password = \"Password must contain at least one digit\";\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = \"This field is required\";\n  } else if (values.confirmPassword.length < 8) {\n    errors.confirmPassword = \"Password must be at least 8 characters long\";\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = \"Passwords do not match\";\n  }\n\n  return errors;\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [emailAvailable, setEmailAvailable] = useState(true);\n\n  const navigate = useNavigate();\n\n  const togglePasswordVisibility = () => {\n    setShowPassword((prevState) => !prevState);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setShowConfirmPassword((prevState) => !prevState);\n  };\n\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (loading) {\n      return;\n    }\n\n    setLoading(true);\n    const credentials = {\n      name: values.username,\n      email: values.email,\n      password: values.password,\n    };\n\n    try {\n      const response = await dispatch(register(credentials));\n\n      if (response.error) {\n        setEmailAvailable(false);\n      } else {\n        setEmailAvailable(true);\n        navigate(\"/login\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={fieldValidation}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        setErrors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        resetForm,\n      }) => {\n        if (!values.password) {\n          errors.password = \"This field is required\";\n        } else if (values.password.length < 8) {\n          errors.password = \"Password must be at least 8 characters long\";\n        } else if (!/[A-Za-z]/.test(values.password)) {\n          errors.password = \"Password must contain at least one letter\";\n        } else if (!/\\d/.test(values.password)) {\n          errors.password = \"Password must contain at least one digit\";\n        }\n\n        const isPasswordValid =\n          values.password &&\n          values.password.length >= 8 &&\n          /[A-Za-z]/.test(values.password) &&\n          /\\d/.test(values.password);\n        const isPasswordMatch =\n          values.password && values.password === values.confirmPassword;\n        const isUsernameValid = values.username && values.username.length >= 2;\n        const isEmailValid =\n          values.email &&\n          !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email);\n        const handleFieldChange = (e) => {\n          const { name } = e.target;\n          setErrors({ ...errors, [name]: \"\" });\n          handleChange(e);\n        };\n\n        return (\n          <RegisterFormEl onSubmit={handleSubmit}>\n            <RegisterFormTitle>Registration</RegisterFormTitle>\n            <RegisterFormUsernameContainer\n              error={errors.username && touched.username}\n              secure={isUsernameValid}\n            >\n              <RegisterFormUsernameInputContainer\n                error={errors.username && touched.username}\n                secure={isUsernameValid}\n                style={{\n                  borderColor:\n                    errors.username && touched.username ? \"#F43F5E\" : \"#54ADFF\",\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  value={values.username}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {isUsernameValid && (\n                  <CheckMarkIcon>\n                    <CheckIcon />\n                  </CheckMarkIcon>\n                )}\n                {errors.username && touched.username && values.username && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, username: \"\" } });\n                    }}\n                  >\n                    <CrossIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormUsernameInputContainer>\n              {errors.username && touched.username && (\n                <ErrorMessage name=\"username\">{errors.username}</ErrorMessage>\n              )}\n            </RegisterFormUsernameContainer>\n\n            <RegisterFormEmailContainer\n              error={errors.email && touched.email}\n              secure={isEmailValid}\n            >\n              <RegisterFormEmailInputContainer\n                error={errors.email && touched.email}\n                secure={isEmailValid}\n                style={{\n                  borderColor:\n                    errors.email && touched.email ? \"#F43F5E\" : \"#54ADFF\",\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={values.email}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {values.email &&\n                  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(\n                    values.email\n                  ) && (\n                    <CheckMarkIcon>\n                      <CheckIcon />\n                    </CheckMarkIcon>\n                  )}\n                {errors.email && touched.email && values.email && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, email: \"\" } });\n                    }}\n                  >\n                    <CrossIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormEmailInputContainer>\n\n              {errors.email && touched.email && (\n                <ErrorMessage name=\"email\">{errors.email}</ErrorMessage>\n              )}\n            </RegisterFormEmailContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.password && touched.password}\n              secure={isPasswordValid}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.password && touched.password}\n                secure={isPasswordValid}\n                style={{\n                  borderColor:\n                    errors.password && touched.password\n                      ? \"#F43F5E\"\n                      : isPasswordValid\n                      ? \"#00C3AD\"\n                      : \"#54ADFF\",\n                }}\n              >\n                <RegisterFormInput\n                  type={showPassword ? \"text\" : \"password\"}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={togglePasswordVisibility}\n                    error={errors.password && touched.password}\n                    secure={isPasswordValid}\n                  >\n                    {showPassword ? <OpenEyeIcon /> : <CloseEyeIcon />}\n                  </EyeIcon>\n                  {isPasswordValid && (\n                    <CheckMarkIcon>\n                      <CheckIcon />\n                    </CheckMarkIcon>\n                  )}\n                  {errors.password && touched.password && values.password && (\n                    <ErrorIcon\n                      onClick={() => {\n                        resetForm({ values: { ...values, password: \"\" } });\n                      }}\n                    >\n                      <CrossIcon />\n                    </ErrorIcon>\n                  )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.password && touched.password && (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              )}\n              {isPasswordValid && (\n                <InfoMessage valid={isPasswordValid}>\n                  Password is secure\n                </InfoMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.confirmPassword && touched.confirmPassword}\n              secure={isPasswordMatch}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.confirmPassword && touched.confirmPassword}\n                style={{\n                  borderColor:\n                    errors.confirmPassword && touched.confirmPassword\n                      ? \"#F43F5E\"\n                      : \"#54ADFF\",\n                }}\n              >\n                <RegisterFormInput\n                  type={showConfirmPassword ? \"text\" : \"password\"}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  value={values.confirmPassword}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={toggleConfirmPasswordVisibility}\n                    error={errors.confirmPassword && touched.confirmPassword}\n                  >\n                    {showConfirmPassword ? <OpenEyeIcon /> : <CloseEyeIcon />}\n                  </EyeIcon>\n                  {isPasswordMatch && (\n                    <CheckMarkIcon>\n                      <CheckIcon />\n                    </CheckMarkIcon>\n                  )}\n                  {errors.confirmPassword &&\n                    touched.confirmPassword &&\n                    values.confirmPassword && (\n                      <ErrorIcon\n                        onClick={() => {\n                          resetForm({\n                            values: { ...values, confirmPassword: \"\" },\n                          });\n                        }}\n                      >\n                        <CrossIcon />\n                      </ErrorIcon>\n                    )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.confirmPassword && touched.confirmPassword && (\n                <ErrorMessage>{errors.confirmPassword}</ErrorMessage>\n              )}\n              {isPasswordMatch && (\n                <InfoMessage valid={isPasswordMatch}>\n                  Passwords match\n                </InfoMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            {!emailAvailable && (\n              <RegisterErrorMessage>\n                This email is already in use. Please, try with another email or\n                log in!\n              </RegisterErrorMessage>\n            )}\n\n            <RegisterBtn type=\"submit\" disabled={isSubmitting}>\n              Registration\n            </RegisterBtn>\n            <LoginText>\n              Already have an account?{\" \"}\n              <LoginLink to={\"/login\"}>Log In</LoginLink>\n            </LoginText>\n          </RegisterFormEl>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const RegisterPageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 40px;\n  height: 100vh;\n\n  @media screen and (min-width: 768px) {\n    padding-top: 80px;\n  }\n  `;\n  \nexport const RegisterFormWrapper = styled.div`\npadding: 40px 12px;\nwidth: 280px;\nheight: fit-content;\nbackground: #ffffff;\nbox-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\nborder-radius: 40px;\nmargin: 0 auto;\n\n@media screen and (min-width: 768px) {\n  padding: 60px 75px;\n  width: 608px;\n  \n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 20px;\n}\n`;","import RegisterForm from '../../components/RegisterForm/RegisterForm';\nimport {\n  RegisterPageWrapper,\n  RegisterFormWrapper,\n} from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  return (\n    <RegisterPageWrapper>\n      <RegisterFormWrapper>\n        <RegisterForm />\n      </RegisterFormWrapper>\n    </RegisterPageWrapper>\n  );\n};\n\nexport default RegisterPage;"],"names":["_path","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgCheck","_ref","svgRef","title","titleId","props","xmlns","width","height","fill","ref","id","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","SvgEyeClosed","_path2","SvgEyeOpen","RegisterFormEl","styled","form","_templateObject","_taggedTemplateLiteral","RegisterFormTitle","h1","_templateObject2","theme","colors","black","RegisterFormUsernameContainer","div","_templateObject3","_ref2","error","_ref3","RegisterFormUsernameInputContainer","_templateObject4","_ref4","red","blueLink","RegisterFormEmailContainer","_templateObject5","_ref5","_ref6","RegisterFormEmailInputContainer","_templateObject6","_ref7","RegisterFormInput","Field","_templateObject7","ErrorIcon","span","_templateObject8","_ref8","ErrorMessage","_templateObject9","_ref9","RegisterFormPasswordContainer","_templateObject10","_ref10","secure","_ref11","RegisterFormPasswordInputContainer","_templateObject11","_ref12","green","PasswordIcon","_templateObject12","EyeIcon","_templateObject13","_ref13","CheckMarkIcon","_templateObject14","_ref14","InfoMessage","_templateObject15","_ref15","RegisterErrorMessage","_templateObject16","_ref16","RegisterBtn","button","_templateObject17","_ref17","LoginText","p","_templateObject18","_ref18","grey","LoginLink","Link","_templateObject19","_ref19","initialValues","username","email","password","confirmPassword","fieldValidation","values","errors","test","RegisterForm","dispatch","useDispatch","showPassword","setShowPassword","useState","showConfirmPassword","setShowConfirmPassword","loading","setLoading","emailAvailable","setEmailAvailable","navigate","useNavigate","togglePasswordVisibility","prevState","toggleConfirmPasswordVisibility","_jsx","Formik","validate","validateOnChange","onSubmit","async","setSubmitting","resetForm","credentials","name","register","console","children","setErrors","touched","handleChange","handleBlur","handleSubmit","isSubmitting","isPasswordValid","isPasswordMatch","isUsernameValid","isEmailValid","handleFieldChange","e","_jsxs","style","borderColor","type","placeholder","value","onChange","onBlur","disabled","CheckIcon","onClick","CrossIcon","OpenEyeIcon","CloseEyeIcon","valid","to","RegisterPageWrapper","RegisterFormWrapper","RegisterPage"],"sourceRoot":""}